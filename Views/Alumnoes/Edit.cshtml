@model AspnetCoreMvcFull.Models.Alumno

@{
	ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Alumno</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="IdAlumno" />

            <div class="form-group">
                <input type="hidden" asp-for="IdUsuario" />
                <span asp-validation-for="IdUsuario" class="text-danger"></span>
            </div>


			<div class="form-group">
				<label asp-for="FechaIngreso" class="control-label"></label>
				<input asp-for="FechaIngreso" class="form-control" />
				<span asp-validation-for="FechaIngreso" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label>Materias</label>
				<div>
					@foreach (var materia in ViewData["TodasLasMaterias"] as List<AspnetCoreMvcFull.Models.Materium>)
					{
						<div>
							<input type="checkbox"
								   name="materias[]"
								   value="@materia.IdMateria"
							@(ViewData["MateriasSeleccionadas"] is int[] materiasSeleccionadas && materiasSeleccionadas.Contains(materia.IdMateria) ? "checked" : "") />
							@materia.NombreMateria
						</div>
					}
				</div>
			</div>

			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
